package com.atguigu.beijingnews.view;

import android.content.Context;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.atguigu.beijingnews.R;

/**
 * 作者：尚硅谷-杨光福 on 2016/8/23 09:40
 * 微信：yangguangfu520
 * QQ号：541433511
 * 作用：自定义下拉刷新的ListView
 */
public class RefreshListview extends ListView {
    /**
     * 下拉刷新和顶部轮播图（先不加入）
     */
    private LinearLayout headerView;

    /**
     * 下拉刷新控件
     */
    private View ll_pull_down_refresh;
    private ImageView iv_arrow;
    private ProgressBar pb_status;
    private TextView tv_status;
    private TextView tv_time;
    /**
     * 下拉刷新控件的高
     */
    private int pullDownRefreshHeight;

    public RefreshListview(Context context) {
        this(context, null);
    }

    public RefreshListview(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    public RefreshListview(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        initHeaderView(context);
    }

    private void initHeaderView(Context context) {
        headerView = (LinearLayout) View.inflate(context, R.layout.refresh_header, null);
        //下拉刷新控件
        ll_pull_down_refresh = headerView.findViewById(R.id.ll_pull_down_refresh);
        iv_arrow = (ImageView) headerView.findViewById(R.id.iv_arrow);
        pb_status = (ProgressBar) headerView.findViewById(R.id.pb_status);
        tv_status = (TextView) headerView.findViewById(R.id.tv_status);
        tv_time = (TextView) headerView.findViewById(R.id.tv_time);

        //测量
        ll_pull_down_refresh.measure(0,0);
        pullDownRefreshHeight = ll_pull_down_refresh.getMeasuredHeight();

        //默认隐藏下拉刷新控件
        // View.setPadding(0,-控件高，0,0);//完全隐藏
        //View.setPadding(0, 0，0,0);//完全显示
        ll_pull_down_refresh.setPadding(0,-pullDownRefreshHeight,0,0);

        //添加ListView的头
        addHeaderView(headerView);
    }

    private float startY = -1;

    @Override
    public boolean onTouchEvent(MotionEvent ev) {
        switch (ev.getAction()){
            case MotionEvent.ACTION_DOWN:
                //1.记录起始坐标
                startY = ev.getY();
                break;
            case MotionEvent.ACTION_MOVE:
                if(startY ==-1){
                    startY = ev.getY();
                }
                //2.来到新的坐标
                float endY = ev.getY();
                //3.记录滑动的距离
                float distanceY = endY - startY;
                if(distanceY > 0){//下拉

                    //int paddingTop = -控件高 + distanceY;
                    int paddingTop = (int) (-pullDownRefreshHeight + distanceY);
                    ll_pull_down_refresh.setPadding(0,paddingTop,0,0);
                    //View.setPadding(0,paddingTop，0,0);//动态的显示下拉刷新控件
                }
                break;
            case MotionEvent.ACTION_UP:
                startY = -1;
                break;

        }
        return super.onTouchEvent(ev);
    }
}
